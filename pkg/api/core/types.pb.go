//*
// This file holds the protobuf definitions for messages and enums
// used in the Weave GitOps gRPC API.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: api/core/types.proto

package api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// Kind enum defines the Kubernetes resource types used in the Core API.
type Kind int32

const (
	Kind_GitRepository         Kind = 0
	Kind_Bucket                Kind = 1
	Kind_HelmRepository        Kind = 2
	Kind_HelmChart             Kind = 3
	Kind_Kustomization         Kind = 4
	Kind_HelmRelease           Kind = 5
	Kind_Cluster               Kind = 6
	Kind_OCIRepository         Kind = 7
	Kind_Provider              Kind = 8
	Kind_Alert                 Kind = 9
	Kind_ImageRepository       Kind = 10
	Kind_ImageUpdateAutomation Kind = 11
	Kind_ImagePolicy           Kind = 12
	Kind_Pod                   Kind = 13
	Kind_Policy                Kind = 14
)

// Enum value maps for Kind.
var (
	Kind_name = map[int32]string{
		0:  "GitRepository",
		1:  "Bucket",
		2:  "HelmRepository",
		3:  "HelmChart",
		4:  "Kustomization",
		5:  "HelmRelease",
		6:  "Cluster",
		7:  "OCIRepository",
		8:  "Provider",
		9:  "Alert",
		10: "ImageRepository",
		11: "ImageUpdateAutomation",
		12: "ImagePolicy",
		13: "Pod",
		14: "Policy",
	}
	Kind_value = map[string]int32{
		"GitRepository":         0,
		"Bucket":                1,
		"HelmRepository":        2,
		"HelmChart":             3,
		"Kustomization":         4,
		"HelmRelease":           5,
		"Cluster":               6,
		"OCIRepository":         7,
		"Provider":              8,
		"Alert":                 9,
		"ImageRepository":       10,
		"ImageUpdateAutomation": 11,
		"ImagePolicy":           12,
		"Pod":                   13,
		"Policy":                14,
	}
)

func (x Kind) Enum() *Kind {
	p := new(Kind)
	*p = x
	return p
}

func (x Kind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Kind) Descriptor() protoreflect.EnumDescriptor {
	return file_api_core_types_proto_enumTypes[0].Descriptor()
}

func (Kind) Type() protoreflect.EnumType {
	return &file_api_core_types_proto_enumTypes[0]
}

func (x Kind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Kind.Descriptor instead.
func (Kind) EnumDescriptor() ([]byte, []int) {
	return file_api_core_types_proto_rawDescGZIP(), []int{0}
}

// *
// HelmRepositoryType enum defines the type of HelmRepository used.
type HelmRepositoryType int32

const (
	HelmRepositoryType_Default HelmRepositoryType = 0
	HelmRepositoryType_OCI     HelmRepositoryType = 1
)

// Enum value maps for HelmRepositoryType.
var (
	HelmRepositoryType_name = map[int32]string{
		0: "Default",
		1: "OCI",
	}
	HelmRepositoryType_value = map[string]int32{
		"Default": 0,
		"OCI":     1,
	}
)

func (x HelmRepositoryType) Enum() *HelmRepositoryType {
	p := new(HelmRepositoryType)
	*p = x
	return p
}

func (x HelmRepositoryType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HelmRepositoryType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_core_types_proto_enumTypes[1].Descriptor()
}

func (HelmRepositoryType) Type() protoreflect.EnumType {
	return &file_api_core_types_proto_enumTypes[1]
}

func (x HelmRepositoryType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HelmRepositoryType.Descriptor instead.
func (HelmRepositoryType) EnumDescriptor() ([]byte, []int) {
	return file_api_core_types_proto_rawDescGZIP(), []int{1}
}

type Interval struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hours         int64                  `protobuf:"varint,1,opt,name=hours,proto3" json:"hours,omitempty"`
	Minutes       int64                  `protobuf:"varint,2,opt,name=minutes,proto3" json:"minutes,omitempty"`
	Seconds       int64                  `protobuf:"varint,3,opt,name=seconds,proto3" json:"seconds,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Interval) Reset() {
	*x = Interval{}
	mi := &file_api_core_types_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Interval) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Interval) ProtoMessage() {}

func (x *Interval) ProtoReflect() protoreflect.Message {
	mi := &file_api_core_types_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Interval.ProtoReflect.Descriptor instead.
func (*Interval) Descriptor() ([]byte, []int) {
	return file_api_core_types_proto_rawDescGZIP(), []int{0}
}

func (x *Interval) GetHours() int64 {
	if x != nil {
		return x.Hours
	}
	return 0
}

func (x *Interval) GetMinutes() int64 {
	if x != nil {
		return x.Minutes
	}
	return 0
}

func (x *Interval) GetSeconds() int64 {
	if x != nil {
		return x.Seconds
	}
	return 0
}

type ObjectRef struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Kind          string                 `protobuf:"bytes,1,opt,name=kind,proto3" json:"kind,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Namespace     string                 `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ClusterName   string                 `protobuf:"bytes,4,opt,name=cluster_name,json=clusterName,proto3" json:"cluster_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ObjectRef) Reset() {
	*x = ObjectRef{}
	mi := &file_api_core_types_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ObjectRef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectRef) ProtoMessage() {}

func (x *ObjectRef) ProtoReflect() protoreflect.Message {
	mi := &file_api_core_types_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectRef.ProtoReflect.Descriptor instead.
func (*ObjectRef) Descriptor() ([]byte, []int) {
	return file_api_core_types_proto_rawDescGZIP(), []int{1}
}

func (x *ObjectRef) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *ObjectRef) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ObjectRef) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ObjectRef) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

type Condition struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Reason        string                 `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
	Message       string                 `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	Timestamp     string                 `protobuf:"bytes,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Condition) Reset() {
	*x = Condition{}
	mi := &file_api_core_types_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Condition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Condition) ProtoMessage() {}

func (x *Condition) ProtoReflect() protoreflect.Message {
	mi := &file_api_core_types_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Condition.ProtoReflect.Descriptor instead.
func (*Condition) Descriptor() ([]byte, []int) {
	return file_api_core_types_proto_rawDescGZIP(), []int{2}
}

func (x *Condition) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Condition) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Condition) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *Condition) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Condition) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

type GitRepositoryRef struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Branch        string                 `protobuf:"bytes,1,opt,name=branch,proto3" json:"branch,omitempty"`
	Tag           string                 `protobuf:"bytes,2,opt,name=tag,proto3" json:"tag,omitempty"`
	Semver        string                 `protobuf:"bytes,3,opt,name=semver,proto3" json:"semver,omitempty"`
	Commit        string                 `protobuf:"bytes,4,opt,name=commit,proto3" json:"commit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GitRepositoryRef) Reset() {
	*x = GitRepositoryRef{}
	mi := &file_api_core_types_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GitRepositoryRef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GitRepositoryRef) ProtoMessage() {}

func (x *GitRepositoryRef) ProtoReflect() protoreflect.Message {
	mi := &file_api_core_types_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GitRepositoryRef.ProtoReflect.Descriptor instead.
func (*GitRepositoryRef) Descriptor() ([]byte, []int) {
	return file_api_core_types_proto_rawDescGZIP(), []int{3}
}

func (x *GitRepositoryRef) GetBranch() string {
	if x != nil {
		return x.Branch
	}
	return ""
}

func (x *GitRepositoryRef) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *GitRepositoryRef) GetSemver() string {
	if x != nil {
		return x.Semver
	}
	return ""
}

func (x *GitRepositoryRef) GetCommit() string {
	if x != nil {
		return x.Commit
	}
	return ""
}

// GroupVersionKind represents an objects Kubernetes API type data
type GroupVersionKind struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Group         string                 `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	Kind          string                 `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`
	Version       string                 `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GroupVersionKind) Reset() {
	*x = GroupVersionKind{}
	mi := &file_api_core_types_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GroupVersionKind) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupVersionKind) ProtoMessage() {}

func (x *GroupVersionKind) ProtoReflect() protoreflect.Message {
	mi := &file_api_core_types_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupVersionKind.ProtoReflect.Descriptor instead.
func (*GroupVersionKind) Descriptor() ([]byte, []int) {
	return file_api_core_types_proto_rawDescGZIP(), []int{4}
}

func (x *GroupVersionKind) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *GroupVersionKind) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *GroupVersionKind) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type NamespacedObjectReference struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Namespace     string                 `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NamespacedObjectReference) Reset() {
	*x = NamespacedObjectReference{}
	mi := &file_api_core_types_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NamespacedObjectReference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NamespacedObjectReference) ProtoMessage() {}

func (x *NamespacedObjectReference) ProtoReflect() protoreflect.Message {
	mi := &file_api_core_types_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NamespacedObjectReference.ProtoReflect.Descriptor instead.
func (*NamespacedObjectReference) Descriptor() ([]byte, []int) {
	return file_api_core_types_proto_rawDescGZIP(), []int{5}
}

func (x *NamespacedObjectReference) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NamespacedObjectReference) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type HealthStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthStatus) Reset() {
	*x = HealthStatus{}
	mi := &file_api_core_types_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthStatus) ProtoMessage() {}

func (x *HealthStatus) ProtoReflect() protoreflect.Message {
	mi := &file_api_core_types_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthStatus.ProtoReflect.Descriptor instead.
func (*HealthStatus) Descriptor() ([]byte, []int) {
	return file_api_core_types_proto_rawDescGZIP(), []int{6}
}

func (x *HealthStatus) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *HealthStatus) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type InventoryEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Payload       string                 `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	Tenant        string                 `protobuf:"bytes,2,opt,name=tenant,proto3" json:"tenant,omitempty"`
	ClusterName   string                 `protobuf:"bytes,3,opt,name=cluster_name,json=clusterName,proto3" json:"cluster_name,omitempty"`
	Health        *HealthStatus          `protobuf:"bytes,4,opt,name=health,proto3" json:"health,omitempty"`
	Children      []*InventoryEntry      `protobuf:"bytes,5,rep,name=children,proto3" json:"children,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InventoryEntry) Reset() {
	*x = InventoryEntry{}
	mi := &file_api_core_types_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InventoryEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InventoryEntry) ProtoMessage() {}

func (x *InventoryEntry) ProtoReflect() protoreflect.Message {
	mi := &file_api_core_types_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InventoryEntry.ProtoReflect.Descriptor instead.
func (*InventoryEntry) Descriptor() ([]byte, []int) {
	return file_api_core_types_proto_rawDescGZIP(), []int{7}
}

func (x *InventoryEntry) GetPayload() string {
	if x != nil {
		return x.Payload
	}
	return ""
}

func (x *InventoryEntry) GetTenant() string {
	if x != nil {
		return x.Tenant
	}
	return ""
}

func (x *InventoryEntry) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

func (x *InventoryEntry) GetHealth() *HealthStatus {
	if x != nil {
		return x.Health
	}
	return nil
}

func (x *InventoryEntry) GetChildren() []*InventoryEntry {
	if x != nil {
		return x.Children
	}
	return nil
}

type Object struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Payload       string                 `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	ClusterName   string                 `protobuf:"bytes,2,opt,name=cluster_name,json=clusterName,proto3" json:"cluster_name,omitempty"`
	Tenant        string                 `protobuf:"bytes,3,opt,name=tenant,proto3" json:"tenant,omitempty"`
	Uid           string                 `protobuf:"bytes,4,opt,name=uid,proto3" json:"uid,omitempty"`
	Inventory     []*GroupVersionKind    `protobuf:"bytes,5,rep,name=inventory,proto3" json:"inventory,omitempty"`
	Info          string                 `protobuf:"bytes,6,opt,name=info,proto3" json:"info,omitempty"`
	Health        *HealthStatus          `protobuf:"bytes,7,opt,name=health,proto3" json:"health,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Object) Reset() {
	*x = Object{}
	mi := &file_api_core_types_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Object) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Object) ProtoMessage() {}

func (x *Object) ProtoReflect() protoreflect.Message {
	mi := &file_api_core_types_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Object.ProtoReflect.Descriptor instead.
func (*Object) Descriptor() ([]byte, []int) {
	return file_api_core_types_proto_rawDescGZIP(), []int{8}
}

func (x *Object) GetPayload() string {
	if x != nil {
		return x.Payload
	}
	return ""
}

func (x *Object) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

func (x *Object) GetTenant() string {
	if x != nil {
		return x.Tenant
	}
	return ""
}

func (x *Object) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *Object) GetInventory() []*GroupVersionKind {
	if x != nil {
		return x.Inventory
	}
	return nil
}

func (x *Object) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

func (x *Object) GetHealth() *HealthStatus {
	if x != nil {
		return x.Health
	}
	return nil
}

type Deployment struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Namespace     string                 `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Conditions    []*Condition           `protobuf:"bytes,3,rep,name=conditions,proto3" json:"conditions,omitempty"`
	Images        []string               `protobuf:"bytes,4,rep,name=images,proto3" json:"images,omitempty"`
	Suspended     bool                   `protobuf:"varint,5,opt,name=suspended,proto3" json:"suspended,omitempty"`
	ClusterName   string                 `protobuf:"bytes,6,opt,name=cluster_name,json=clusterName,proto3" json:"cluster_name,omitempty"`
	Uid           string                 `protobuf:"bytes,7,opt,name=uid,proto3" json:"uid,omitempty"`
	Labels        map[string]string      `protobuf:"bytes,8,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Deployment) Reset() {
	*x = Deployment{}
	mi := &file_api_core_types_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Deployment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Deployment) ProtoMessage() {}

func (x *Deployment) ProtoReflect() protoreflect.Message {
	mi := &file_api_core_types_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Deployment.ProtoReflect.Descriptor instead.
func (*Deployment) Descriptor() ([]byte, []int) {
	return file_api_core_types_proto_rawDescGZIP(), []int{9}
}

func (x *Deployment) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Deployment) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *Deployment) GetConditions() []*Condition {
	if x != nil {
		return x.Conditions
	}
	return nil
}

func (x *Deployment) GetImages() []string {
	if x != nil {
		return x.Images
	}
	return nil
}

func (x *Deployment) GetSuspended() bool {
	if x != nil {
		return x.Suspended
	}
	return false
}

func (x *Deployment) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

func (x *Deployment) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *Deployment) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type Crd struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          *Crd_Name              `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Version       string                 `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Kind          string                 `protobuf:"bytes,3,opt,name=kind,proto3" json:"kind,omitempty"`
	ClusterName   string                 `protobuf:"bytes,4,opt,name=cluster_name,json=clusterName,proto3" json:"cluster_name,omitempty"`
	Uid           string                 `protobuf:"bytes,5,opt,name=uid,proto3" json:"uid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Crd) Reset() {
	*x = Crd{}
	mi := &file_api_core_types_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Crd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Crd) ProtoMessage() {}

func (x *Crd) ProtoReflect() protoreflect.Message {
	mi := &file_api_core_types_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Crd.ProtoReflect.Descriptor instead.
func (*Crd) Descriptor() ([]byte, []int) {
	return file_api_core_types_proto_rawDescGZIP(), []int{10}
}

func (x *Crd) GetName() *Crd_Name {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *Crd) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Crd) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *Crd) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

func (x *Crd) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

type Namespace struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Annotations   map[string]string      `protobuf:"bytes,3,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Labels        map[string]string      `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	ClusterName   string                 `protobuf:"bytes,5,opt,name=cluster_name,json=clusterName,proto3" json:"cluster_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Namespace) Reset() {
	*x = Namespace{}
	mi := &file_api_core_types_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Namespace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Namespace) ProtoMessage() {}

func (x *Namespace) ProtoReflect() protoreflect.Message {
	mi := &file_api_core_types_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Namespace.ProtoReflect.Descriptor instead.
func (*Namespace) Descriptor() ([]byte, []int) {
	return file_api_core_types_proto_rawDescGZIP(), []int{11}
}

func (x *Namespace) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Namespace) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Namespace) GetAnnotations() map[string]string {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *Namespace) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *Namespace) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

type Event struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Reason        string                 `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Timestamp     string                 `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Component     string                 `protobuf:"bytes,5,opt,name=component,proto3" json:"component,omitempty"`
	Host          string                 `protobuf:"bytes,6,opt,name=host,proto3" json:"host,omitempty"`
	Name          string                 `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`
	Uid           string                 `protobuf:"bytes,8,opt,name=uid,proto3" json:"uid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Event) Reset() {
	*x = Event{}
	mi := &file_api_core_types_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_api_core_types_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_api_core_types_proto_rawDescGZIP(), []int{12}
}

func (x *Event) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Event) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *Event) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Event) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *Event) GetComponent() string {
	if x != nil {
		return x.Component
	}
	return ""
}

func (x *Event) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *Event) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Event) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

type Crd_Name struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Plural        string                 `protobuf:"bytes,1,opt,name=plural,proto3" json:"plural,omitempty"`
	Group         string                 `protobuf:"bytes,2,opt,name=group,proto3" json:"group,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Crd_Name) Reset() {
	*x = Crd_Name{}
	mi := &file_api_core_types_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Crd_Name) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Crd_Name) ProtoMessage() {}

func (x *Crd_Name) ProtoReflect() protoreflect.Message {
	mi := &file_api_core_types_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Crd_Name.ProtoReflect.Descriptor instead.
func (*Crd_Name) Descriptor() ([]byte, []int) {
	return file_api_core_types_proto_rawDescGZIP(), []int{10, 0}
}

func (x *Crd_Name) GetPlural() string {
	if x != nil {
		return x.Plural
	}
	return ""
}

func (x *Crd_Name) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

var File_api_core_types_proto protoreflect.FileDescriptor

const file_api_core_types_proto_rawDesc = "" +
	"\n" +
	"\x14api/core/types.proto\x12\x0egitops_core.v1\"T\n" +
	"\bInterval\x12\x14\n" +
	"\x05hours\x18\x01 \x01(\x03R\x05hours\x12\x18\n" +
	"\aminutes\x18\x02 \x01(\x03R\aminutes\x12\x18\n" +
	"\aseconds\x18\x03 \x01(\x03R\aseconds\"t\n" +
	"\tObjectRef\x12\x12\n" +
	"\x04kind\x18\x01 \x01(\tR\x04kind\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x1c\n" +
	"\tnamespace\x18\x03 \x01(\tR\tnamespace\x12!\n" +
	"\fcluster_name\x18\x04 \x01(\tR\vclusterName\"\x87\x01\n" +
	"\tCondition\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12\x16\n" +
	"\x06reason\x18\x03 \x01(\tR\x06reason\x12\x18\n" +
	"\amessage\x18\x04 \x01(\tR\amessage\x12\x1c\n" +
	"\ttimestamp\x18\x05 \x01(\tR\ttimestamp\"l\n" +
	"\x10GitRepositoryRef\x12\x16\n" +
	"\x06branch\x18\x01 \x01(\tR\x06branch\x12\x10\n" +
	"\x03tag\x18\x02 \x01(\tR\x03tag\x12\x16\n" +
	"\x06semver\x18\x03 \x01(\tR\x06semver\x12\x16\n" +
	"\x06commit\x18\x04 \x01(\tR\x06commit\"V\n" +
	"\x10GroupVersionKind\x12\x14\n" +
	"\x05group\x18\x01 \x01(\tR\x05group\x12\x12\n" +
	"\x04kind\x18\x02 \x01(\tR\x04kind\x12\x18\n" +
	"\aversion\x18\x03 \x01(\tR\aversion\"M\n" +
	"\x19NamespacedObjectReference\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\"@\n" +
	"\fHealthStatus\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\xd7\x01\n" +
	"\x0eInventoryEntry\x12\x18\n" +
	"\apayload\x18\x01 \x01(\tR\apayload\x12\x16\n" +
	"\x06tenant\x18\x02 \x01(\tR\x06tenant\x12!\n" +
	"\fcluster_name\x18\x03 \x01(\tR\vclusterName\x124\n" +
	"\x06health\x18\x04 \x01(\v2\x1c.gitops_core.v1.HealthStatusR\x06health\x12:\n" +
	"\bchildren\x18\x05 \x03(\v2\x1e.gitops_core.v1.InventoryEntryR\bchildren\"\xf9\x01\n" +
	"\x06Object\x12\x18\n" +
	"\apayload\x18\x01 \x01(\tR\apayload\x12!\n" +
	"\fcluster_name\x18\x02 \x01(\tR\vclusterName\x12\x16\n" +
	"\x06tenant\x18\x03 \x01(\tR\x06tenant\x12\x10\n" +
	"\x03uid\x18\x04 \x01(\tR\x03uid\x12>\n" +
	"\tinventory\x18\x05 \x03(\v2 .gitops_core.v1.GroupVersionKindR\tinventory\x12\x12\n" +
	"\x04info\x18\x06 \x01(\tR\x04info\x124\n" +
	"\x06health\x18\a \x01(\v2\x1c.gitops_core.v1.HealthStatusR\x06health\"\xdf\x02\n" +
	"\n" +
	"Deployment\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x129\n" +
	"\n" +
	"conditions\x18\x03 \x03(\v2\x19.gitops_core.v1.ConditionR\n" +
	"conditions\x12\x16\n" +
	"\x06images\x18\x04 \x03(\tR\x06images\x12\x1c\n" +
	"\tsuspended\x18\x05 \x01(\bR\tsuspended\x12!\n" +
	"\fcluster_name\x18\x06 \x01(\tR\vclusterName\x12\x10\n" +
	"\x03uid\x18\a \x01(\tR\x03uid\x12>\n" +
	"\x06labels\x18\b \x03(\v2&.gitops_core.v1.Deployment.LabelsEntryR\x06labels\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xcc\x01\n" +
	"\x03Crd\x12,\n" +
	"\x04name\x18\x01 \x01(\v2\x18.gitops_core.v1.Crd.NameR\x04name\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\x12\x12\n" +
	"\x04kind\x18\x03 \x01(\tR\x04kind\x12!\n" +
	"\fcluster_name\x18\x04 \x01(\tR\vclusterName\x12\x10\n" +
	"\x03uid\x18\x05 \x01(\tR\x03uid\x1a4\n" +
	"\x04Name\x12\x16\n" +
	"\x06plural\x18\x01 \x01(\tR\x06plural\x12\x14\n" +
	"\x05group\x18\x02 \x01(\tR\x05group\"\xe2\x02\n" +
	"\tNamespace\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12L\n" +
	"\vannotations\x18\x03 \x03(\v2*.gitops_core.v1.Namespace.AnnotationsEntryR\vannotations\x12=\n" +
	"\x06labels\x18\x04 \x03(\v2%.gitops_core.v1.Namespace.LabelsEntryR\x06labels\x12!\n" +
	"\fcluster_name\x18\x05 \x01(\tR\vclusterName\x1a>\n" +
	"\x10AnnotationsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xc3\x01\n" +
	"\x05Event\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12\x16\n" +
	"\x06reason\x18\x02 \x01(\tR\x06reason\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\x12\x1c\n" +
	"\ttimestamp\x18\x04 \x01(\tR\ttimestamp\x12\x1c\n" +
	"\tcomponent\x18\x05 \x01(\tR\tcomponent\x12\x12\n" +
	"\x04host\x18\x06 \x01(\tR\x04host\x12\x12\n" +
	"\x04name\x18\a \x01(\tR\x04name\x12\x10\n" +
	"\x03uid\x18\b \x01(\tR\x03uid*\xfb\x01\n" +
	"\x04Kind\x12\x11\n" +
	"\rGitRepository\x10\x00\x12\n" +
	"\n" +
	"\x06Bucket\x10\x01\x12\x12\n" +
	"\x0eHelmRepository\x10\x02\x12\r\n" +
	"\tHelmChart\x10\x03\x12\x11\n" +
	"\rKustomization\x10\x04\x12\x0f\n" +
	"\vHelmRelease\x10\x05\x12\v\n" +
	"\aCluster\x10\x06\x12\x11\n" +
	"\rOCIRepository\x10\a\x12\f\n" +
	"\bProvider\x10\b\x12\t\n" +
	"\x05Alert\x10\t\x12\x13\n" +
	"\x0fImageRepository\x10\n" +
	"\x12\x19\n" +
	"\x15ImageUpdateAutomation\x10\v\x12\x0f\n" +
	"\vImagePolicy\x10\f\x12\a\n" +
	"\x03Pod\x10\r\x12\n" +
	"\n" +
	"\x06Policy\x10\x0e**\n" +
	"\x12HelmRepositoryType\x12\v\n" +
	"\aDefault\x10\x00\x12\a\n" +
	"\x03OCI\x10\x01B-Z+github.com/weaveworks/weave-gitops/core/apib\x06proto3"

var (
	file_api_core_types_proto_rawDescOnce sync.Once
	file_api_core_types_proto_rawDescData []byte
)

func file_api_core_types_proto_rawDescGZIP() []byte {
	file_api_core_types_proto_rawDescOnce.Do(func() {
		file_api_core_types_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_core_types_proto_rawDesc), len(file_api_core_types_proto_rawDesc)))
	})
	return file_api_core_types_proto_rawDescData
}

var file_api_core_types_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_api_core_types_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_api_core_types_proto_goTypes = []any{
	(Kind)(0),                         // 0: gitops_core.v1.Kind
	(HelmRepositoryType)(0),           // 1: gitops_core.v1.HelmRepositoryType
	(*Interval)(nil),                  // 2: gitops_core.v1.Interval
	(*ObjectRef)(nil),                 // 3: gitops_core.v1.ObjectRef
	(*Condition)(nil),                 // 4: gitops_core.v1.Condition
	(*GitRepositoryRef)(nil),          // 5: gitops_core.v1.GitRepositoryRef
	(*GroupVersionKind)(nil),          // 6: gitops_core.v1.GroupVersionKind
	(*NamespacedObjectReference)(nil), // 7: gitops_core.v1.NamespacedObjectReference
	(*HealthStatus)(nil),              // 8: gitops_core.v1.HealthStatus
	(*InventoryEntry)(nil),            // 9: gitops_core.v1.InventoryEntry
	(*Object)(nil),                    // 10: gitops_core.v1.Object
	(*Deployment)(nil),                // 11: gitops_core.v1.Deployment
	(*Crd)(nil),                       // 12: gitops_core.v1.Crd
	(*Namespace)(nil),                 // 13: gitops_core.v1.Namespace
	(*Event)(nil),                     // 14: gitops_core.v1.Event
	nil,                               // 15: gitops_core.v1.Deployment.LabelsEntry
	(*Crd_Name)(nil),                  // 16: gitops_core.v1.Crd.Name
	nil,                               // 17: gitops_core.v1.Namespace.AnnotationsEntry
	nil,                               // 18: gitops_core.v1.Namespace.LabelsEntry
}
var file_api_core_types_proto_depIdxs = []int32{
	8,  // 0: gitops_core.v1.InventoryEntry.health:type_name -> gitops_core.v1.HealthStatus
	9,  // 1: gitops_core.v1.InventoryEntry.children:type_name -> gitops_core.v1.InventoryEntry
	6,  // 2: gitops_core.v1.Object.inventory:type_name -> gitops_core.v1.GroupVersionKind
	8,  // 3: gitops_core.v1.Object.health:type_name -> gitops_core.v1.HealthStatus
	4,  // 4: gitops_core.v1.Deployment.conditions:type_name -> gitops_core.v1.Condition
	15, // 5: gitops_core.v1.Deployment.labels:type_name -> gitops_core.v1.Deployment.LabelsEntry
	16, // 6: gitops_core.v1.Crd.name:type_name -> gitops_core.v1.Crd.Name
	17, // 7: gitops_core.v1.Namespace.annotations:type_name -> gitops_core.v1.Namespace.AnnotationsEntry
	18, // 8: gitops_core.v1.Namespace.labels:type_name -> gitops_core.v1.Namespace.LabelsEntry
	9,  // [9:9] is the sub-list for method output_type
	9,  // [9:9] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_api_core_types_proto_init() }
func file_api_core_types_proto_init() {
	if File_api_core_types_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_core_types_proto_rawDesc), len(file_api_core_types_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_core_types_proto_goTypes,
		DependencyIndexes: file_api_core_types_proto_depIdxs,
		EnumInfos:         file_api_core_types_proto_enumTypes,
		MessageInfos:      file_api_core_types_proto_msgTypes,
	}.Build()
	File_api_core_types_proto = out.File
	file_api_core_types_proto_goTypes = nil
	file_api_core_types_proto_depIdxs = nil
}
