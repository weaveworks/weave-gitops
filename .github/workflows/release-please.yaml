name: Release Please

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

jobs:
  # This job creates or updates the release PR based on conventional commits
  release-please:
    runs-on: ubuntu-latest
    if: ${{ github.repository_owner == 'weaveworks' }}
    outputs:
      version: ${{ steps.release-please.outputs.version }}
      release_created: ${{ steps.release-please.outputs.release_created }}
      release_pr: ${{ steps.release-please.outputs.release_pr }}
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      
      - name: Release Please
        id: release-please
        uses: googleapis/release-please-action@c2a5a2bd6a758a0937f1ddb1e8950609867ed15c # v4.3.0
        with:
          token: ${{ secrets.WEAVE_GITOPS_BOT_ACCESS_TOKEN }}
          config-file: .github/release-please-config.json

  # This job publishes the release after the release PR is merged
  publish-release:
    needs: release-please
    runs-on: ubuntu-latest
    if: ${{ needs.release-please.outputs.release_created == 'true' }}
    permissions:
      contents: write
      id-token: write
      packages: write
    steps:
      - name: Extract version info
        id: version
        run: |
          VERSION="${{ needs.release-please.outputs.version }}"
          echo "version=${VERSION#v}" >> $GITHUB_OUTPUT
          echo "tag=v${VERSION#v}" >> $GITHUB_OUTPUT
          echo "Publishing release: v${VERSION#v}"
      
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
      
      - name: Setup Go
        uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        with:
          go-version-file: go.mod
      
      - name: Setup Node.js
        uses: actions/setup-node@2028fbc5c25fe9cf00d9f06a71cc4710d4507903 # v6.0.0
        with:
          node-version-file: package.json
          registry-url: "https://npm.pkg.github.com"
          scope: "@weaveworks"
      
      # Run GoReleaser to create binaries and GitHub Release
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@e435ccd777264be153ace6237001ef4d979d3a7a # v6.4.0
        with:
          version: latest
          args: release --clean --skip=validate
        env:
          GITHUB_TOKEN: ${{ secrets.WEAVE_GITOPS_BOT_ACCESS_TOKEN }}
          FLUX_VERSION: $(make echo-flux-version)
      
      # Build and push Docker images
      - name: Build and push Docker image
        uses: docker/build-push-action@0adf9959216b96bec444f325f1e493d4aa344497 # v6.14.0
        with:
          context: .
          file: gitops-server.dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/weaveworks/wego-app:${{ steps.version.outputs.tag }}
            ghcr.io/weaveworks/wego-app:latest
          build-args: |
            FLUX_VERSION=$(make echo-flux-version)
          labels: |
            org.opencontainers.image.version=${{ steps.version.outputs.tag }}
            org.opencontainers.image.revision=${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      # Sign Docker image
      - name: Install cosign
        uses: sigstore/cosign-installer@faadad0cce49287aee09b3a48701e75088a2c6ad # v4.0.0
      
      - name: Sign Docker image
        run: |
          cosign sign --yes ghcr.io/weaveworks/wego-app:${{ steps.version.outputs.tag }}
      
      # Publish NPM package
      - name: Publish NPM package
        run: |
          yarn
          make ui-lib
          jq '.version = "'${{ steps.version.outputs.version }}'"' < dist/package.json > dist/package.tmp && mv dist/package.tmp dist/package.json
          cp .npmrc dist
          cd dist && npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      # Build and publish Helm chart
      - name: Package Helm chart
        run: |
          mkdir -p helm-release
          helm package charts/gitops-server/ -d helm-release
      
      - name: Login to GHCR
        uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef # v3.6.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Push Helm chart
        run: |
          CHART_VERSION=$(yq e '.version' charts/gitops-server/Chart.yaml)
          helm push helm-release/weave-gitops-${CHART_VERSION}.tgz oci://ghcr.io/weaveworks/charts
      
      - name: Sign Helm chart
        run: |
          CHART_VERSION=$(yq e '.version' charts/gitops-server/Chart.yaml)
          helm push helm-release/weave-gitops-${CHART_VERSION}.tgz oci://ghcr.io/weaveworks/charts 2>&1 | tee chart-digest.txt
          DIGEST=$(grep Digest chart-digest.txt | awk '{print $2}')
          cosign sign --yes ghcr.io/weaveworks/charts@${DIGEST}
      
      # Note: Website versioning is handled by Release Please config
      # The docs workflow will automatically build and deploy when main is updated
      
      - name: Create release summary
        run: |
          echo "# Release Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Version:** ${{ steps.version.outputs.tag }}" >> $GITHUB_STEP_SUMMARY
          echo "**Components Released:**" >> $GITHUB_STEP_SUMMARY
          echo "- Binaries (GoReleaser)" >> $GITHUB_STEP_SUMMARY
          echo "- Docker images" >> $GITHUB_STEP_SUMMARY
          echo "- Helm chart" >> $GITHUB_STEP_SUMMARY
          echo "- NPM package" >> $GITHUB_STEP_SUMMARY
